package sbnz.integracija;

import com.example.SBNZApp.facts.*;


declare SuspiciousCustomerEvent
    @role(event)
    customerId: Long
    reason: String
end

declare AlarmTriggered
    customerId: Long
end

rule "Vise od 10 poseta smestaju u 10minuta"
    agenda-group "cep"
    when
        $t1: PutovanjeEvent($cId: user.ID)
        Number(intValue >= 5) from accumulate(
            $t2: PutovanjeEvent(
                this != $t1, 
                user.ID == $cId              
                
            ) over window:time(5s),
            count($t2)          
        )

    then
            System.out.println("USAO SAM OVDEEEEEEEE");
    
        insert(new SuspiciousCustomerEvent($cId, "Sumnjivo ponasanje, previse putovanja u 10 minuta"));
        
end

/*
rule "No heart beat in the last 5 seconds!"
    when
        not(
            HeartBeatEvent() 
            over window:time(5s)
        )
    then
        insert(new HeartAttackEvent());
        drools.halt();
end
*/
/*
rule "More than 1 transaction of 200 dollars in an hour from the same client"
    when
        $t1: TransactionEvent($cId: customerId, totalAmount >= 200.0)
        $t2: TransactionEvent(
            this != $t1, 
            this meets[1h] $t1, 
            customerId == $cId, 
            totalAmount >= 200.0
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Two large transactions"))
    then
        insert(new SuspiciousCustomerEvent($cId, "Two large transactions"));
end

rule "More than 3 suspicious cases in the day and we warn the owner"
    when
        SuspiciousCustomerEvent($cId: customerId)
        not (AlarmTriggered(customerId == $cId))
        Number(intValue >= 2) from accumulate(
            $s: SuspiciousCustomerEvent(customerId == $cId),
            count($s)
        )
    then
        //warn the owner
        System.out.println("WARNING: Suspicious fraud case. Client " + $cId);
        insert(new AlarmTriggered($cId));
end


rule "More than 10 transactions in an hour from small client portal"
    when
        $t1: TransactionEvent($cId: customerId) from entry-point "small-client-portal"
        Number(intValue >= 10) from accumulate(
            $t2: TransactionEvent(
                this != $t1, 
                customerId == $cId, 
                this meets[1h] $t1
            ) from entry-point "small-client-portal",
            count($t2)
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Many transactions"))
    then
        insert(new SuspiciousCustomerEvent($cId, "Many transactions"));
end

rule "More than 100 transactions in an hour from big client portal"
    when
        $t1: TransactionEvent($cId: customerId) from entry-point "big-client-portal"
        Number(intValue >= 100) from accumulate(
            $t2: TransactionEvent(
                this != $t1, 
                customerId == $cId, 
                this meets[1h] $t1
            ) from entry-point "big-client-portal",
            count($t2)
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Many transactions"))
    then
        insert(new SuspiciousCustomerEvent($cId, "Many transactions"));
end*/